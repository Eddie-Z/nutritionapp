{"version":3,"sources":["../../../nutritioncalculator/src/r.png","../../../nutritioncalculator/src/components/search-box/search-box.component.jsx","../../../nutritioncalculator/src/components/totalnutrition/totalnutrition.component.jsx","../../../nutritioncalculator/src/components/listfood/listfood.component.jsx","../../../nutritioncalculator/src/components/food/Food.component.jsx","../../../nutritioncalculator/src/App.js","../../../nutritioncalculator/src/index.js"],"names":["module","exports","__webpack_require__","p","SearchBox","_ref","search","updateSearch","placeholder","react_default","a","createElement","type","className","value","onChange","TotalNutrition","totalNut","protein","fat","carb","ListFood","plate","class","map","food","Food","name","proteins","fats","carbs","App","API_KEY","_useState","useState","_useState2","Object","slicedToArray","setFood","_useState3","_useState4","setPlate","_useState5","_useState6","setSearch","_useState7","_useState8","query","setQuery","_useState9","_useState10","setTotalNut","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","data","resArr","chosenFood","ndbno","response2","data2","nutrients","wrap","_context","prev","next","fetch","concat","sent","json","list","item","sort","b","length","console","log","report","filter","nutrient","nutrient_id","toConsumableArray","stop","apply","this","arguments","getFood","src","require","onSubmit","e","preventDefault","search_box_component_SearchBox","target","tempPlate","push","parseInt","Food_component_Food","listfood_component_ListFood","totalnutrition_component_TotalNutrition","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.686c11b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/r.8a8372dc.png\";","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ search, updateSearch, placeholder }) => (\n  <div>\n    <input\n      type=\"text\"\n      className=\"search-bar\"\n      value={search}\n      onChange={updateSearch}\n      placeholder={placeholder}\n    />\n    <button type=\"submit\" className=\"search-button\">\n      <i className=\"fas fa-search\" />\n    </button>\n  </div>\n);\n","import React from 'react';\nimport './totalnutrition.styles.css';\n\nexport const TotalNutrition = ({ totalNut }) => {  \n    \n    return( \n    <div className=\"totalNutrition\">\n        <div className=\"total-proteins total-nutrition\">\n            <h1>Total Proteins:</h1>\n            <p>{totalNut.protein}</p>\n            \n        </div>\n        \n        <div className=\"total-fats total-nutrition\">\n             <h1>Total Fats:</h1>\n             <p>{totalNut.fat}</p>\n        \n        </div>\n\n        <div className=\"total-carbs total-nutrition\">\n            <h1>Total Carbs:</h1>\n            <p>{totalNut.carb}</p>\n        </div>\n    </div>\n    )\n};","import React from 'react';\nimport './listfood.styles.css';\n\nexport const ListFood = ({ plate }) => (\n    <div className=\"list\">\n        <h1 class=\"plate\">Plate</h1>\n        <div className=\"left\">\n        <ul class=\"left-list\">\n            {plate.map( food => {\n                return(\n                    <li> {food[0]} </li>\n                )\n            })}\n        </ul>\n\n        </div>\n        <div className=\"right\">\n        <ul>\n            {plate.map( food => {\n                return(\n            <li> {food[1]} / {food[1]} / {food[2]}</li>\n                )\n            })}\n        </ul>\n            \n        </div>\n         \n    </div>\n  );","import React from 'react';\nimport './food.styles.css';\n\nexport const Food = ({ name, proteins, fats, carbs }) => (\n  <div className=\"food \">\n     <div className=\"name food-nutrition food-nutrition-1\">\n        <h1>{name}</h1>\n        <button type=\"submit\" className=\"add-button\">\n           <i className=\"fas fa-plus\" />\n    </button>\n    </div>\n    <div className=\"proteins food-nutrition\">\n        <span className=\"icon\">üçó</span>\n        <h1>Proteins:</h1>\n        <p>{proteins}</p>\n    </div>\n    \n    <div className=\"fats food-nutrition\">\n    <span className=\"icon\">ü•ë</span>\n      <h1>Fats:</h1>\n      <p>{fats}</p>\n    </div>\n\n    <div className=\"carbs food-nutrition\">\n    <span className=\"icon\">üçû</span>\n      <h1>Carbs:</h1>\n      <p>{carbs}</p>\n    </div>\n\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport {TotalNutrition} from './components/totalnutrition/totalnutrition.component';\nimport {ListFood} from './components/listfood/listfood.component';\nimport {Food} from './components/food/Food.component';\nimport './App.css';\n\nconst App = () => {\n  const API_KEY = '6UsIFES35DeJmZTd2H3J7775D9oFpczaRGCK681v';\n\n  const [food, setFood] = useState([]);\n  const [plate, setPlate] = useState([])\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n  const [totalNut, setTotalNut] = useState({protein: 0, fat:0, carb:0})\n\n  useEffect(() => {\n    const getFood = async () => {\n      //get the food\n      const response = await fetch(\n        `https://api.nal.usda.gov/ndb/search/?format=json&q=${query}&api_key=${API_KEY}&ds=Standard Reference`    \n      );\n\n      const data = await response.json();\n      let resArr = data.list.item;\n      let chosenFood = resArr.sort((a,b) => a.name.length - b.name.length)[0];\n      let ndbno = chosenFood.ndbno;\n      console.log(query);\n      let name = chosenFood.name;\n\n      //get the nutrients\n      const response2 = await fetch(\n        `https://api.nal.usda.gov/ndb/reports/?ndbno=${ndbno}&api_key=${API_KEY}`   \n      );\n      const data2 = await response2.json();\n      let nutrients = data2.report.food.nutrients;\n      nutrients = nutrients.filter(nutrient => nutrient.name=== 'Carbohydrate, by difference' || nutrient.name=== 'Protein' || nutrient.name=== 'Total lipid (fat)')\n        .sort((a,b) => {return a.nutrient_id - b.nutrient_id})\n        .map(nutrient => { return nutrient.value});\n        console.log([name,...nutrients]);\n      setFood([name,...nutrients]);\n    };\n    getFood();\n  }, [query]);\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n  const addToPlate = e =>{\n    e.preventDefault();\n\n    //array\n    let tempPlate = plate;\n    tempPlate.push(food);\n    setPlate(tempPlate);\n\n    //add totalNut\n    let protein = totalNut.protein + parseInt(food[1]);\n    let fat = totalNut.fat + parseInt(food[2]);\n    let carb = totalNut.carb + parseInt(food[3]);\n    setTotalNut({protein: protein, fat:fat, carb:carb})\n\n  }\n\n  const filterLogic = e => {\n    e.target.classList.toggle('active-filter');\n    const li = e.target;\n    if (li.classList.contains('active-filter')) {\n      setQuery(li.innerText);\n    } else {\n      setQuery('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n    \n      <header className=\"header\">\n        <h1 className=\"title\">Nutrition Plate</h1>\n        <div className=\"img\">\n          <img src={require('./r.png')} />\n        </div>\n        <form onSubmit={getSearch} className=\"search-form\">\n          <SearchBox updateSearch={updateSearch} placeholder=\"Search Food\" />\n        </form>\n        { <div className=\"search-filter\">\n         \n        </div> }\n      </header>\n     \n      <div>\n        <form onSubmit={addToPlate}>\n          <Food\n            name={food[0]}\n            proteins={food[1]}\n            fats={food[2]}\n            carbs={food[3]}\n          />\n        </form>\n      </div>\n      <div>\n        <ListFood plate={plate}/>\n      </div>\n      <div>\n        <TotalNutrition totalNut={totalNut}/>\n      </div>\n\n\n        \n        \n        \n        {/* {recipes.map((recipe, index) => (\n          <Recipe\n            key={index}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))} */}\n     \n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}